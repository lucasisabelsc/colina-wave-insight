AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Projeto Base com SAM + API nomeada + Stage param

Globals:
  Function:
    Timeout: 3
    Runtime: python3.12
    Architectures:
      - x86_64

Parameters:
  StageName:
    Type: String
    Default: dev

Resources:

  # API nomeada e reutiliz√°vel
  CrmApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${StageName}-CrmApi"
      StageName: !Ref StageName
      Cors:
        AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  AlertsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: alerts/
      Handler: app.lambda_handler
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: "*"
      Events:
        AlertsGet:
          Type: Api
          Properties:
            Path: /alerts
            Method: get
            RestApiId: !Ref CrmApi

  MetricsTodayFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: metricsToday/
      Handler: app.lambda_handler
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: "*"
      Events:
        MetricsTodayGet:
          Type: Api
          Properties:
            Path: /metrics/today
            Method: get
            RestApiId: !Ref CrmApi
  
  
  GroupsOverviewFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: groupsOverview/
      Handler: app.lambda_handler
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: "*"
      Events:
        GroupsOverviewGet:
          Type: Api
          Properties:
            Path: /groups/overview
            Method: get
            RestApiId: !Ref CrmApi

  ActivityHourlyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: activity/
      Handler: hourly.lambda_handler
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: "*"
      Events:
        ActivityHourlyGet:
          Type: Api
          Properties:
            Path: /activity/hourly
            Method: get
            RestApiId: !Ref CrmApi

  ActivityWeeklyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: activity/
      Handler: weekly.lambda_handler
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: "*"
      Events:
        ActivityWeeklyGet:
          Type: Api
          Properties:
            Path: /activity/weekly
            Method: get
            RestApiId: !Ref CrmApi
